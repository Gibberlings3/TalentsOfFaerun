DEFINE_ACTION_FUNCTION make_str_payload BEGIN


	// this can all be done via existing externalisation

	// load data
	COPY - "%MOD_FOLDER%/%component_loc%/data/str_extra.2da" nowhere
		COUNT_2DA_ROWS 3 rowcount
		FOR (row=0;row<rowcount;row+=1) BEGIN
			READ_2DA_ENTRY row 0 3 ability
			PATCH_IF IS_AN_INT ability BEGIN
				READ_2DA_ENTRY row 1 3 bend_bars
				SET $bend_bars("%ability%")=bend_bars
				READ_2DA_ENTRY row 2 3 weight_limit
				SET $weight_limit("%ability%")=weight_limit
			END
		END	
	BUT_ONLY

	// strmod.2da
	COPY_EXISTING "strmod.2da" override
		COUNT_2DA_ROWS 5 rowcount
		FOR (row=0;row<rowcount;row+=1) BEGIN
			READ_2DA_ENTRY row 0 5 str
			PATCH_IF IS_AN_INT str BEGIN
				LPF 3e_abil_standard INT_VAR ability=str RET modifier END
				SET_2DA_ENTRY row 1 5 modifier 
				SET_2DA_ENTRY row 2 5 modifier 
				PATCH_IF VARIABLE_IS_SET $bend_bars("%str%") BEGIN
					SET_2DA_ENTRY row 3 5 $bend_bars("%str%")
				END
				PATCH_IF VARIABLE_IS_SET $weight_limit("%str%") BEGIN
					SET_2DA_ENTRY row 4 5 $weight_limit("%str%")
				END
			END
		END
	BUT_ONLY
	
	// wipe strmodex.2da
  
	COPY_EXISTING "strmodex.2da" override
		COUNT_2DA_ROWS 5 rowcount
		FOR (row=0;row<rowcount;row+=1) BEGIN
			FOR (col=1;col<5;col+=1) BEGIN
				SET_2DA_ENTRY row col 5 0
			END
		END
	
	BUT_ONLY
	
	// hide exceptional strength in the UI and in items/spells
	
	LAF ui_hide_exceptional_strength END
	LAF remove_exceptional_strength_itm_spl END

END

DEFINE_ACTION_FUNCTION ui_hide_exceptional_strength BEGIN

	// edit the general function to display ability scores, to stop allowing for exceptional strength
	// install the dwAdjustShownAbilityValue function (shared with subrace)


	
<<<<<<<< .../stratagems-inline/display_attr.txt
function displayAttr(index)
	str = 0
	str = displayBuff( attributeItems[index][1].current, attributeItems[index][1].base, 1)
	return str
end
>>>>>>>>

	LAF UI_install_function STR_VAR new_function_path="%MOD_FOLDER%/%lua_loc%/code/adjust_abilities.lua" lua_file="m_dw_shr" search_string=dwGetAbilityValue END
	COPY_EXISTING ui.menu override
		LPF UI_alter_object INT_VAR silent=1 STR_VAR object=CHARGEN_ABILITIES object_type=menu patch=UI_chargen_abil_display END
		LPF UI_replace_function INT_VAR inline=1 STR_VAR function=DisplayAttr new_function_path="display_attr.txt" END
	BUT_ONLY
	
	// note that we're suppressing ex-str
	
	APPEND "m_dw_shr.lua" "dwHideExStr=true%WNL%" KEEP_CRLF

	// if subrace functions aren't present, install a placeholder
	
<<<<<<<<.../stratagems-inline/subrace_placeholder.lua
function dwSubraceAbilityModifier(abil)
	return 0
end
>>>>>>>>

ACTION_IF !FILE_EXISTS_IN_GAME "m_dw_sbf.lua" BEGIN
	COPY ".../stratagems-inline/subrace_placeholder.lua" "override/m_dw_sbf.lua"
END

END

DEFINE_ACTION_FUNCTION remove_exceptional_strength_itm_spl BEGIN

	//// special cases

	// beast claw - STR->16
	
	ACTION_IF VARIABLE_IS_SET CLERIC_BEAST_CLAW BEGIN
	  ACTION_IF FILE_EXISTS_IN_GAME "%spl_malar_beast_claw%.spl" BEGIN // do it manually
		itm.edit[bclaw]
		[
			m.fx.alter{s_parameter1=(s_parameter1=18?16:20)|match="s_opcode=44"}
			m.fx.alter{s_opcode=(s_parameter1=100?44:97) s_parameter1=18|match="s_opcode=97"}	
			m.fx.delete{s_opcode=97}
		]
		LAF 2da_read STR_VAR file=clastext.2da RET_ARRAY clastext_array=array clastext_rows=rows END
		ACTION_PHP_EACH clastext_rows AS kit=>discard BEGIN
			ACTION_MATCH "%kit%" WITH
			"DW_MALAR_.*" BEGIN
				OUTER_SET desc_strref=$clastext_array("%kit%" "DESCSTR")
				ACTION_GET_STRREF desc_strref desc_string
				OUTER_PATCH_SAVE desc_string "%desc_string%" BEGIN
					REPLACE_TEXTUALLY "18/76" "16"
					REPLACE_TEXTUALLY "18/00" "18"
					REPLACE_TEXTUALLY "19" "20"
				END
				STRING_SET_EVALUATE desc_strref "%desc_string%"
			END				
			DEFAULT
			END
		
		END
	  END ELSE BEGIN	  
		  COPY_EXISTING "bclaw.itm" override
			LPF adjust_exceptional_strength INT_VAR new_str=16 update_desc=0 END
		  BUT_ONLY
	  END
	
	  COPY_EXISTING "%CLERIC_BEAST_CLAW%.spl" override
		LPF adjust_exceptional_strength INT_VAR new_str=16 update_fx=0 END
	  BUT_ONLY
	  IF_EXISTS
	END 

	// holy power -> STR->20

	COPY_EXISTING "%CLERIC_HOLY_POWER%.spl" override
		LPF adjust_exceptional_strength INT_VAR new_str=20 END
	BUT_ONLY
	
	//  Champion's Strength (BG2)->STR->20
	
	ACTION_IF !is_iwd BEGIN
		COPY_EXISTING "%CLERIC_CHAMPIONS_STRENGTH%.spl" override
			LPF adjust_exceptional_strength INT_VAR new_str=20 END
		BUT_ONLY
	END
	
	// Mazzy strength (BG2)
	
	ACTION_IF is_bg2 BEGIN
		spl.edit[%MAZZY_STRENGTH%|edit_strrefs_in_place:i=1]
		[
			m_description:=@14
			m.ab.delete{s_level>1}
			m.ab_fx.delete{s_opcode=97}
			m.ab.clone{s_level=10+3*entry_index|number:i=3}
			m.ab_fx.alter{s_parameter1=p_level=1?18:(p_level=10?19:(p_level=13?20:(p_level=16?21:18)))|match="s_opcode=44"}
		]
	END
	
	
	// gauntlets of elven might
	
	ACTION_IF FILE_EXISTS_IN_GAME gauntem.itm BEGIN

		COPY_EXISTING "gauntem.itm" override
			LPF adjust_exceptional_strength INT_VAR new_str=16 END
		BUT_ONLY	
	END
	
	// Strength spell (IWD just needs desc update, BG gets mapped over to IWD version)
	
	COPY_EXISTING "%WIZARD_STRENGTH%.spl" override
		READ_LONG 0x50 desc_strref
		GET_STRREF desc_strref desc
		INNER_PATCH_SAVE desc "%desc%" BEGIN
			PATCH_IF is_iwd BEGIN
				SPRINT old @12
			END ELSE BEGIN
				SPRINT old @11
			END
			SPRINT new @13
			REPLACE_TEXTUALLY "%old%.*" "%new%"
		END
		INNER_ACTION BEGIN
			STRING_SET_EVALUATE desc_strref "%desc%"
		END
		PATCH_IF !is_iwd BEGIN
			LPF DELETE_EFFECT INT_VAR match_opcode=97 END
			LPF DELETE_EFFECT INT_VAR match_opcode=139 END
			LPF ALTER_EFFECT INT_VAR match_opcode=44 parameter1=0 parameter2=3 END
			PATCH_IF !FILE_EXISTS_IN_GAME "clssplab.2da" BEGIN
				INNER_ACTION BEGIN
					COPY "%MOD_FOLDER%/%component_loc%/resource/clssplab.2da" override
				END
			END
		END
	BUT_ONLY
	
	

	// default

	COPY_EXISTING_REGEXP 
	".*\.itm" override
	".*\.spl" override
		found=0		
		PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE itm BEGIN
		GET_OFFSET_ARRAY fx_arr ITM_V10_GEN_EFFECTS
		PHP_EACH fx_arr AS fx_ind=>fx_off BEGIN
			READ_SHORT fx_off opcode
			  PATCH_IF opcode=97 BEGIN
				found=1
			  END
		END	
		END
		PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE itm BEGIN
			GET_OFFSET_ARRAY ab_arr ITM_V10_HEADERS
		END ELSE BEGIN
			GET_OFFSET_ARRAY ab_arr SPL_V10_HEADERS		
		END
		PHP_EACH ab_arr AS ab_ind=>ab_off BEGIN
			GET_OFFSET_ARRAY2 fx_arr ab_off ITM_V10_HEAD_EFFECTS
			PHP_EACH fx_arr AS fx_ind=>fx_off BEGIN
			  READ_SHORT fx_off opcode
			  PATCH_IF opcode=97 BEGIN
				found=1
			  END
			
			END
		END	
		// special cases
		PATCH_MATCH "%SOURCE_FILE%" WITH
		"bclaw.itm" BEGIN
			found=0
		END
		DEFAULT
		END
		PATCH_IF found BEGIN
			LPF adjust_exceptional_strength END
		END

	BUT_ONLY
	
END


DEFINE_PATCH_FUNCTION adjust_exceptional_strength INT_VAR new_str=18 update_desc=1 update_fx=1 BEGIN
	PATCH_IF update_desc BEGIN
		PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE itm BEGIN
			READ_LONG 0x54 desc_strref
		END ELSE BEGIN
			READ_LONG 0x50 desc_strref
		END
		PATCH_IF desc_strref>0 && desc_strref<999999 BEGIN
		 GET_STRREF desc_strref desc
		 INNER_PATCH_SAVE desc "%desc%" BEGIN
			REPLACE_TEXTUALLY "18/[0-9][0-9]" "%new_str%"
		 END
		 INNER_ACTION BEGIN
			STRING_SET_EVALUATE desc_strref "%desc%"
		 END
		END
	END
	PATCH_IF update_fx BEGIN
		LPF DELETE_EFFECT INT_VAR match_opcode=97 END
		LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=44 parameter1=new_str END
	END
END


DEFINE_PATCH_FUNCTION UI_chargen_abil_display BEGIN // note the need for compatibility with subrace

	REPLACE_TEXTUALLY "chargen\.ability\[\([^]]+\)\]\.roll" "dwAdjustShownAbilityValue(\1,dwSubraceAbilityModifier(\1))"

END
