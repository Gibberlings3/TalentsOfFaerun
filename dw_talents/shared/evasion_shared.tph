DEFINE_PATCH_FUNCTION enable_evasion INT_VAR enforce_breath=1 splstate=252 name_strref="-1" is_item=0 STR_VAR resref=""  BEGIN

	SPRINT resref "%SOURCE_RES%"
	
	PATCH_MATCH "%resref%" WITH
		AROW16 BOLT03 FBOLT SORB BEGIN
			SET proceed=0
		END
	DEFAULT
		SET proceed=1	
	END
	PATCH_IF proceed BEGIN


	// get the spell name if not already set
	
	PATCH_IF name_strref<0 BEGIN
		PATCH_IF is_item BEGIN
			READ_LONG 0xc name_strref
		END ELSE BEGIN
			READ_LONG 0x8 name_strref
		END
	END
	GET_STRREF name_strref name_string

	LPF log_this STR_VAR file=evasion.txt input="%name_string% (%SOURCE_FILE%)" END

	// find the name for the immunity spell
	LPF find_evasion_slot RET spell=slot END
	
	// patch the immunity spell, and the save-to-avoid immunity *to* the immunity spell, into the original resource (and get its name while you're at it)
	
	LPF DELETE_EFFECT INT_VAR match_opcode=324 match_parameter2=63 END // erase previous evasion
	PATCH_IF enforce_breath BEGIN
		LPF CLONE_EFFECT INT_VAR match_opcode=12 match_save_for_half=1 match_save_vs_breath=1 parameter1=splstate parameter2=110 special=0 dicenumber=0 dicesize=0 opcode=318 timing=0 duration=1 STR_VAR resource="%spell%" END
		LPF CLONE_EFFECT INT_VAR match_opcode=12 match_save_for_half=1 match_save_vs_breath=1 parameter1=splstate parameter2=110 special=0 dicenumber=0 dicesize=0 save_vs_breath=0 savebonus=0 opcode=326 timing=0 STR_VAR resource="%spell%" END
	END ELSE BEGIN
		LPF CLONE_EFFECT INT_VAR match_opcode=12 match_save_for_half=1 parameter1=splstate parameter2=110 special=0 dicenumber=0 dicesize=0 opcode=318 timing=0 duration=1 STR_VAR resource="%spell%" END
		LPF CLONE_EFFECT INT_VAR match_opcode=12 match_save_for_half=1 parameter1=splstate parameter2=110 special=0 dicenumber=0 dicesize=0 savingthrow=0 savebonus=0 opcode=326 timing=0 STR_VAR resource="%spell%" END	
	END
	// apply the immunity spell outright if you're stunned (etc)

	// make the immunity spell (dwevaxxx.spl - grants immunity to the primary spell)
	INNER_ACTION BEGIN
	 WITH_TRA "%scs_tra_loc%/english/evasion.tra" "%scs_tra_loc%/%LANGUAGE%/evasion.tra" BEGIN
		ACTION_IF "%name%" STRING_COMPARE "" BEGIN
			OUTER_SPRINT evade_string @1
			OUTER_SPRINT evade_string "%evade_string%%name_string%"
		END 
	 END
	 CREATE spl "%spell%" 
		LPF add_basic_spell_ability END
		LPF ADD_SPELL_EFFECT INT_VAR opcode=318 target=2 timing=0 duration=1 STR_VAR resource="%resref%" END
		LPF ADD_SPELL_EFFECT INT_VAR opcode=139 target=2 timing=1 parameter1=RESOLVE_STR_REF("%evade_string%") END
	END
	END


END





DEFINE_PATCH_FUNCTION find_evasion_slot INT_VAR to_try=0  RET slot BEGIN

	PATCH_IF !FILE_EXISTS_IN_GAME "dweva%to_try%.spl" &&  !FILE_EXISTS_IN_GAME "dweva%to_try%.spl" BEGIN
		SPRINT slot "dweva%to_try%"
	END ELSE BEGIN
		to_try +=1
		LPF find_evasion_slot INT_VAR to_try RET slot END
	END

END


DEFINE_PATCH_FUNCTION reflex_helpless BEGIN

		SET helpless=0x29
		PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "spl" BEGIN
			SPRINT function ADD_SPELL_EFFECT
		END ELSE BEGIN
			SPRINT function ADD_ITEM_EFFECT
		END
		LPF "%function%" INT_VAR insert_point=0 opcode=326 target=2 timing=1 parameter1=helpless parameter2=138 STR_VAR resource="%spl_helpless_reflex_save%" END



END

DEFINE_ACTION_FUNCTION reflex_helpless_setup BEGIN

	CREATE spl "%spl_helpless_reflex_save%" 
		LPF add_basic_spell_ability END
		LPF ADD_SPELL_EFFECT INT_VAR opcode=36 target=2 timing=0 duration=1 parameter1="-20" parameter2=3 END


END

DEFINE_ACTION_FUNCTION build_allevade BEGIN // for testing

	CREATE spl "allevade" 
		LPF add_basic_spell_ability END
		LPF ADD_SPELL_EFFECT INT_VAR opcode=328 target=3 timing=1 parameter2=252 special=1 END


END

DEFINE_ACTION_FUNCTION erase_previous_evasion BEGIN

  COPY_EXISTING_REGEXP ".*\.\(spl\|itm\)" "override"
	
	SET is_evadable=0
	PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "ITM" BEGIN
		GET_OFFSET_ARRAY ab_arr ITM_V10_HEADERS
	END ELSE BEGIN	
		READ_BYTE 0x25 school
		GET_OFFSET_ARRAY ab_arr SPL_V10_HEADERS
	END
	PHP_EACH ab_arr AS ab_ind=>ab_off BEGIN
	  READ_SHORT ab_off+0x26 projectile
	  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "ITM" BEGIN
		GET_OFFSET_ARRAY2 fx_arr ab_off ITM_V10_HEAD_EFFECTS
	  END ELSE BEGIN
		GET_OFFSET_ARRAY2 fx_arr ab_off SPL_V10_HEAD_EFFECTS
	  END
	  PHP_EACH fx_arr AS fx_ind=>fx_off BEGIN
		PATCH_IF (SHORT_AT fx_off)=324 BEGIN
			READ_LONG (fx_off+0x8) param2
			PATCH_IF  param2=63 || ( param2=110 && (LONG_AT (fx_off+0x4)) = 252 ) BEGIN
				SET is_evadable=1
				WRITE_SHORT fx_off 999
			END
		END
	  END
	END
	PATCH_IF is_evadable BEGIN
		LPF DELETE_EFFECT INT_VAR match_opcode=999 END
	END
	
	
  BUT_ONLY


END